var validation = {

    setMethods: function () {
        // Define error message options (format and position relative to error input)
        $.validator.setDefaults({
            debug: true,
            success: 'valid',
            errorElement: 'span',
            errorPlacement: function (error, element) {
                if ($(element).is(':checkbox')) { // Move message on checkboxes
                    error.insertAfter($(element).parent());
                } else if ($(element).is(':radio')) { // Move message on radio buttons
                    error.insertAfter($(element).parent().parent());
                } else if ($(element).siblings('.tooltip-wrapper').length) { // Move message when tooltip on the side
                    error.insertAfter($(element).parent());
                } else if ($(element).attr('data-validation-nomessage')) { // Remove validation message
                    error.remove();
                } else if ($(element).is('.home-panel-form-text')) { // home page registration panel
                    error.insertAfter($(element).siblings('.button'));
                } else { // This is the default behavior of the script
                    error.insertAfter($(element));
                }
            }
        });

        // Validation method for regex expressions
        $.validator.addMethod(
            'regexFormat',
            function (value, element) {
                var regexString = $(element).attr('data-validation-regex');
                var check = false;
                var re = new RegExp(regexString);
                return this.optional(element) || (re.test(value) > 0);
            }
        );

        // Validation method for regex expressions
        $.validator.addMethod(
            'registerEmailFormat',
            function (value, element) {
                email = value.replace(/^\s*|\s*$/g, '');

                // Some quick checks
                if (email.match(/[\t\r\n]/)) {
                    return false;
                }
                if (email.length == 0 || email.length > 320) {
                    return false;
                }

                var atIndex = email.length - 1;
                if (email.charAt(atIndex) == ']') {
                    // Bracketed domain
                    atIndex--;
                    var curr = email.charAt(atIndex);
                    var prev = email.charAt(atIndex - 1);
                    var domain = '';
                    while (curr != '[' && atIndex) {
                        var currCode = curr.charCodeAt(0);
                        if (prev == '\\') {
                            if (currCode >= 128 || currCode < 1) {
                                return false;
                            }
                            domain = curr + domain;
                            atIndex -= 2;
                            curr = email.charAt(atIndex);
                            prev = email.charAt(atIndex - 1);
                        } else {
                            if ((currCode <= 127 && currCode >= 94) ||
                                (currCode <= 90 && currCode >= 14) ||
                                (currCode <= 9 && currCode >= 1) ||
                                currCode == 11 || currCode == 12) {
                                domain = curr + domain;
                                atIndex--;
                                curr = prev;
                                prev = email.charAt(atIndex - 1);
                            } else {
                                // Invalid unquoted character
                                return false;
                            }
                        }
                    }
                    if (atIndex < 1) {
                        // We need at least one character to the left of the @ symbol
                        return false;
                    }
                    if (prev != '@') {
                        // Improper escaping
                        return false;
                    }
                    if (!is_valid_email_domain(domain, true)) {
                        return false;
                    }
                    atIndex--;
                } else {
                    // Labels with dots; ":" is a special thing for IPv6
                    var allowed = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!#$%&'*+-/=?^_`{|}~.:";
                    while (allowed.indexOf(email.charAt(atIndex)) >= 0 && atIndex) {
                        atIndex--;
                    }
                    if (atIndex < 1) {
                        // Must have at least 1 character to the left of the @ symbol
                        return false;
                    }
                    if (email.charAt(atIndex) != '@') {
                        // Invalid
                        return false;
                    }
                    var domain = email.substring(atIndex + 1);
                    if (!is_valid_email_domain(domain, false)) {
                        return false;
                    }
                }

                // Check info@ and sales@
                var beforeAt = email.split('@')[0];
                if (beforeAt === 'info' || beforeAt === 'sales') {
                    return false;
                }

                var localPart = email.substring(0, atIndex);
                if (localPart.length > 64) {
                    return false;
                }
                var allowedLocal = "!#$%&'*+-/0123456789=?ABCDEFGHIJKLMNOPQRSTUVWXYZ^_`abcdefghijklmnopqrstuvwxyz{|}~";

                // Parsing mode:
                //   0 = start of a label
                //   1 = in label, normal text (unquoted)
                //   2 = in label, quoted text
                //   3 = in label, quoted and escaped (last was a backslash)
                //   4 = after quoted label (only allows a period as next char)
                var mode = 0;
                for (i = 0; i < localPart.length; i++) {
                    var c = localPart.charAt(i);

                    if (mode == 0) {
                        // Start of a label
                        if (c == '"') {
                            mode = 2;
                        } else if (c == '.') {
                            return false;
                        } else if (allowedLocal.indexOf(c) < 0) {
                            return false;
                        } else {
                            mode = 1;
                        }
                    } else if (mode == 1) {
                        // In unquoted label
                        if (c == '.') {
                            mode = 0;
                        } else if (allowedLocal.indexOf(c) < 0) {
                            return false;
                        }
                    } else if (mode == 2) {
                        // In quoted label
                        if (c == '"') {
                            mode = 4;
                        } else if (c == '\\') {
                            mode = 3;
                        } else {
                            var cCode = c.charCodeAt(0);
                            if ((cCode > 8 && cCode < 11) ||
                                (cCode > 90 && cCode < 94) ||
                                cCode == 13 || cCode == 34 || cCode > 127) {
                                return false;
                            }
                        }
                    } else if (mode == 3) {
                        var cCode = c.charCodeAt(0);
                        if (cCode == 10 || cCode == 11 || cCode > 127) {
                            return false;
                        }
                        mode = 2;
                    } else if (mode == 4) {
                        if (c != '.') {
                            return false;
                        }
                        mode = 0;
                    }
                }
                if (mode != 1 && mode != 4) {
                    return false;
                }
                return true;
            }
        );

        // This function assumes you already checked for invalid characters
        // Any escaping has been removed
        function is_valid_email_domain(domain, isBracketed) {
            if (domain.length == 0) {
                // Gotta have a domain
                return false;
            }
            if (domain.length > 253) {
                // Too long for DNS to work
                return false;
            }
            if (domain.match(/^\.|\.\.|\.$/)) {
                // No empty labels allowed
                return false;
            }
            if (domain.match(/^-|--|\.-|-\.|-$/)) {
                // No leading or trailing hyphens allowed in labels.  No double hyphens
                return false;
            }
            var labels = domain.split('.');
            var looksLikeIPv4 = false;
            var looksLikeIPv6 = false;
            if (labels.length == 4) {
                looksLikeIPv4 = true;
            } else if (labels.length == 1) {
                looksLikeIPv6 = true;
                var allowedIPv6 = '0123456789abcdefABCDEF';
                var parts = labels[0].split(':');
                if (parts.length != 5 || parts[2] != '') {
                    looksLikeIPv6 = false;
                }
                for (var i in parts) {
                    if (parts[i].length > 4) {
                        looksLikeIPv6 = false;
                    }
                    for (var j = 0; j < parts[i].length; j++) {
                        if (allowedIPv6.indexOf(parts[i].charAt(j)) < 0) {
                            looksLikeIPv6 = false;
                        }
                    }
                }
            }
            for (var i in labels) {
                if (labels[i].length > 63) {
                    return false;
                }
                if (looksLikeIPv4) {
                    if (labels[i].length > 3) {
                        looksLikeIPv4 = false;
                    }
                    for (var j = 0; j < labels[i].length; j++) {
                        if ('01234567890'.indexOf(labels[i].charAt(j)) < 0) {
                            looksLikeIPv4 = false;
                        }
                    }
                    if (looksLikeIPv4 && (labels[i] < 0 || labels[i] > 255)) {
                        looksLikeIPv4 = false;
                    }
                }
            }

            // If we have a ":", it is only allowed for IPv6 or bracketed domains
            if (!looksLikeIPv6 && domain.indexOf(':') >= 0 && !isBracketed) {
                return false;
            }

            // IPv6 and IPs don't have alpha-only TLDs
            if (!looksLikeIPv4 && !looksLikeIPv6) {
                var tld = labels[labels.length - 1];
                var tldIndex = tld.length;
                var allowedTld = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
                while (tldIndex) {
                    tldIndex--;
                    if (allowedTld.indexOf(tld.charAt(tldIndex)) < 0) {
                        return false;
                    }
                }
            }

            return true;
        }

        // Validation method for inputs that need matching other inputs
        $.validator.addMethod(
            'matchInput',
            function (value, element) {
                var $this = $(element);
                var $thisVal = $this.val();
                var $matchEl = $this.attr('data-validation-matchTo');
                var $matchElVal = $this.closest('form').find('[name="' + $matchEl + '"]').val();

                if ($thisVal !== $matchElVal) {
                    return false;
                } else {
                    return true;
                }
            }
        );

        // Validation method for custom dropdowns
        $.validator.addMethod(
            'selectRequired',
            function (value, element) {
                if (value === 'clearSelect' || value === '') {
                    $(element).closest('.select-wrapper').find('.dk-selected').addClass('select-error');
                    return false;
                } else {
                    $(element).closest('.select-wrapper').find('.dk-selected').removeClass('select-error');
                    return true;
                }
            }
        );

        // Validation method for min length
        $.validator.addMethod(
            'minLengthCheck',
            function (value, element) {
                var $lengthVal = $(element).attr('data-validation-minLength');
                var $inputValLength = value.length;
                if ($inputValLength < parseInt($lengthVal)) {
                    return false;
                } else {
                    return true;
                }
            }
        );

        // Validation method for max length
        $.validator.addMethod(
            'maxLengthCheck',
            function (value, element) {
                var $lengthVal = $(element).attr('data-validation-maxLength');
                var $inputValLength = value.length;
                if ($inputValLength > parseInt($lengthVal)) {
                    return false;
                } else {
                    return true;
                }
            }
        );

        function isValidDate2(y, m, d) {
            // No leap year by default
            var daysInMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];

            // Check for leap (if evenly divisible by 4)
            if (((y % 4 === 0) && (y % 100 !== 0)) || (y % 400 === 0)) {
                daysInMonth[1] = 29;
            }
            return d <= daysInMonth[--m];
        }

        var isSubmitted = false;

        $('.birthday-selects').closest('form').find('button[type="submit"]').on('click', function () {
            var date = $('.dob-hidden').val();
            if (date) {
                var dateSplit = date.split('/');
                if (
                    !(dateSplit[0] === '' && dateSplit[1] === '' && dateSplit[2] === '')
                    &&
                    (dateSplit[0] === '' || dateSplit[1] === '' || dateSplit[2] === '')
                ) {
                    isSubmitted = true;
                    $('.birthday-selects').find('.dk-selected').each(function () {
                        $(this).addClass('select-error');
                    });
                    $('.birthday-selects').find('select').each(function () {
                        $(this).addClass('error');
                    });
                }
            }
        });

        // Validation method for date of birth
        $.validator.addMethod(
            'validBirthDate',
            function (value, element) {
                var date = value;
                var dateSplit = date.split('/');

                if (isSubmitted === false) {
                    if (
                        (isValidDate2(dateSplit[0], dateSplit[1], dateSplit[2]) === false)
                        &&
                        (dateSplit[0] !== '' && dateSplit[1] !== '' && dateSplit[2] !== '')
                    ) {
                        $('.birthday-selects').find('.dk-selected').each(function () {
                            $(this).addClass('select-error');
                        });
                        $('.birthday-selects').find('select').each(function () {
                            $(this).addClass('error');
                        });
                        return false;
                    } else {
                        $('.birthday-selects').find('.dk-selected').each(function () {
                            $(this).removeClass('select-error');
                        });
                        $('.birthday-selects').find('select').each(function () {
                            $(this).removeClass('error');
                        });
                        return true;
                    }
                } else {
                    if (
                        (
                            (isValidDate2(dateSplit[0], dateSplit[1], dateSplit[2]) === false)
                            &&
                            !(dateSplit[0] === '' || dateSplit[1] === '' || dateSplit[2] === '')
                        )
                        ||
                        (
                            (dateSplit[0] !== '' && dateSplit[1] === '' && dateSplit[2] === '')
                            ||
                            (dateSplit[0] === '' && dateSplit[1] !== '' && dateSplit[2] === '')
                            ||
                            (dateSplit[0] === '' && dateSplit[1] === '' && dateSplit[2] !== '')
                            ||
                            (dateSplit[0] !== '' && dateSplit[1] !== '' && dateSplit[2] === '')
                            ||
                            (dateSplit[0] !== '' && dateSplit[1] === '' && dateSplit[2] !== '')
                            ||
                            (dateSplit[0] === '' && dateSplit[1] !== '' && dateSplit[2] !== '')
                        )
                    ) {
                        $('.birthday-selects').find('.dk-selected').each(function () {
                            $(this).addClass('select-error');
                        });
                        $('.birthday-selects').find('select').each(function () {
                            $(this).addClass('error');
                        });
                        return false;
                    } else {
                        isSubmitted = false;
                        $('.birthday-selects').find('.dk-selected').each(function () {
                            $(this).removeClass('select-error');
                        });
                        $('.birthday-selects').find('select').each(function () {
                            $(this).removeClass('error');
                        });
                        return true;
                    }
                }
            }
        );


        // Allow empty fields
        $.validator.addMethod(
            'allowEmpty',
            function (value, element) {
                var $inputValLength = value.length;
                if ($inputValLength === 0) {
                    return true;
                }
            }
        );
    },

    stripSpacesFromEmail: function ($form) {
        console.log('strip spaces')
        $form.find('input[type="email"]').forEach(function (item) {
            console.log(item)
        })
    },

    // Trigger validation for each form
    validateForms: function () {
        var formSubmitted = false;
        $('form').each(function () {
            var $form = $(this);
            $form.validate({
                submitHandler: function (form) {
                    //strip spaces from email inputs
                    $form.find('input[type="email"]').each(function (item) {
                        $(this).val($(this).val().trim())
                    })
                    $form.find('input[type="submit"]').prop('disabled', true);
                    $form.find('button[type="submit"]').prop('disabled', true);
                    if (formSubmitted === false) {
                        formSubmitted = true;

                        if ($form.attr('id') !== 'registration-modal-form' && !$form.hasClass('custom-form')) {
                            form.submit();
                        }
                    }
                }
            });
        });
    },

    // Set validation rules for different types input sets
    setRules: function () {
        // Check required
        $('input').each(function () {
            var message_required = $(this).attr('data-validation-empty');
            if (message_required) {
                $(this).rules('add', {
                    required: true,
                    messages: { required: message_required }
                });
            }
        });

        // Regex input formats
        $('[data-validation-regex]').each(function () {
            var message_format = $(this).attr('data-validation-format');
            $(this).rules('add', {
                regexFormat: true,
                messages: {
                    regexFormat: message_format
                }
            });
        });

        // Email input formats (this does not target all email inputs)
        $('[data-validation-registerEmail]').each(function () {
            var message_format = $(this).attr('data-validation-format');
            $(this).rules('add', {
                registerEmailFormat: true,
                messages: {
                    registerEmailFormat: message_format
                }
            });
        });

        // Prevent input of spaces in email fields (works on android!)
        $('input[type="email"]').on('textInput', function (e) {
            var keyCode = e.originalEvent.data.charCodeAt(0);
            if (keyCode === 32) return false
        })

        // Re-enter inputs matching (email and password)
        $('[data-validation-matchTo]').each(function () {
            var matchTo = $(this).attr('data-validation-matchTo');
            var message_matchTo = $(this).attr('data-validation-format');
            $(this).rules('add', {
                matchInput: true,
                messages: {
                    matchInput: message_matchTo
                }
            });
        });

        // Minimum length inputs
        $('[data-validation-minLength]').each(function () {
            var minLength_message = $(this).attr('data-validation-minLenght-message');
            $(this).rules('add', {
                minLengthCheck: true,
                messages: {
                    minLengthCheck: minLength_message
                }
            });
        });

        // Maximum length inputs
        $('[data-validation-maxLength]').each(function () {
            var maxLength_message = $(this).attr('data-validation-maxLenght-message');
            $(this).rules('add', {
                maxLengthCheck: true,
                messages: {
                    maxLengthCheck: maxLength_message
                }
            });
        });

        // Dropdowns
        $('select[data-validation-empty]').each(function () {
            var message_required = $(this).attr('data-validation-empty');
            $(this).rules('add', {
                selectRequired: true,
                messages: {
                    selectRequired: message_required
                }
            });
        });

        // Validate Date Of Birth
        $('.dob-hidden').each(function () {
            var message_valid = $(this).attr('data-validation-dob');
            $(this).rules('add', {
                validBirthDate: true,
                messages: {
                    validBirthDate: message_valid
                }
            });
        });

        function populateDob() {
            var $container = $('.birthday-selects');
            var $day = $container.find('#DobDay');
            var $month = $container.find('#DobMonth');
            var $year = $container.find('#DobYear');
            // get values
            var $dayVal = $day.val().toString();
            var $monthVal = $month.val().toString();
            var $yearVal = $year.val().toString();

            $('.dob-hidden').val($yearVal + '/' + $monthVal + '/' + $dayVal);
        }

        // if ($('.birthday-selects').length) {
        // 	populateDob();
        // }

        $('.birthday-selects select').each(function () {
            $(this).on('change', function () {
                var wrapper = $(this).closest('.select-wrapper');
                populateDob();

                $('.dob-hidden').focus();
                setTimeout(function () {
                    $('.dob-hidden').blur();
                    var customDd = wrapper.find('.dk-selected');
                    if (customDd.length) {
                        customDd.focus();
                    } else {
                        wrapper.find('select');
                    }
                }, 50);
            });
        });

        // Allow empty fields
        $('[data-validation-allowEmpty]').each(function () {
            $(this).rules('add', {
                allowEmpty: true
            });
        });
    },

    init: function () {
        if ($('form').length) {
            validation.setMethods();
            validation.validateForms();
            validation.setRules();
        }
    }
};