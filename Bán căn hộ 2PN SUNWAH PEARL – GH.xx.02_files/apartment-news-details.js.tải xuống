var ApartmentNewsDetailsViewModel = function (id,
    area,
    bedRoomNo,
    title,
    body,
    priceText,
    heroImageUrl,
    bathRoonNo,
    directionText,
    type,
    address,
    totalChat,
    totalView,
    vrTourUrl,
    chatPerson,
    files,
    priceUnit,
    statusText,
    statusColor,
    idText) {
    var self = this;
    self.Id = id;
    self.Area = area;
    self.BedRoomNo = bedRoomNo;
    self.Title = title;
    self.Body = body;
    self.PriceText = priceText;
    self.HeroImageUrl = heroImageUrl;
    self.BathRoonNo = bathRoonNo;
    self.DirectionText = directionText;
    self.Address = address;
    self.TotalChat = totalChat;
    self.TotalView = totalView;
    self.VRTourUrl = vrTourUrl;
    self.ChatPerson = chatPerson;
    self.Files = files;
    self.Type = type;
    self.PriceUnit = priceUnit;
    self.StatusText = statusText;
    self.StatusColor = statusColor;
    self.IdText = 'MGV' + idText;
}
var ChatPersonModel = function (phoneNumer, nickName, avatar, email, ownerId) {
    var self = this;
    self.PhoneNumer = phoneNumer;
    self.PhoneNumerDisplay = ko.observable(phoneNumer.replace(/\d{3}$/, '***'));
    self.NickName = nickName;
    self.Avatar = avatar;
    self.Email = email;
    self.OwnerId = ownerId;
    self.IsShowPhone = ko.observable(false);
}
var ApartmentFileModel = function (name, src) {
    var self = this;
    self.Name = name;
    self.Src = src;
}
function ApartmentNewsDetails(postId, newsJson) {
    var self = this;
    self.news = ko.observable();
    self.errorMessages = ko.observableArray([]);
    init();

    self.onShowPhoneNumber = function () {
        if (!self.news().ChatPerson.IsShowPhone()) {
            self.news().ChatPerson.PhoneNumerDisplay(self.news().ChatPerson.PhoneNumer);
            self.news().ChatPerson.IsShowPhone(true);
        }
    }

    function init() {
        if (!commonMogivi.Utility.IsnullOrWhiteSpace(newsJson)) {
            var data = JSON.parse(newsJson);
            var item = data.Result;
            mapNews(item);
            setTimeout(initCarousel, 1);
        } else {
            var url = commonMogivi.ApiUrls.ApartmentPostUrl + "?postId=" + postId;
            commonMogivi.APIs.get(url, function (data) {
                if (data.Result) {
                    var item = data.Result;
                    mapNews(item);
                    initCarousel();
                } else {
                    self.errorMessages.push('Tin không tồn tại!');
                }
            }, function (err) {
                self.errorMessages.push(err);
            });
        }
    }

    function mapNews(item) {
        var chatPerson = new ChatPersonModel(item.ChatContact.PhoneNumer,
            item.ChatContact.NickName,
            item.ChatContact.Avatar,
            item.ChatContact.Email,
            item.ChatContact.OwnerId);
        self.news(new ApartmentNewsDetailsViewModel(item.Id,
            item.Area,
            item.BedRoomNo,
            item.Title,
            item.Body,
            item.PriceText,
            item.HeroImageUrl,
            item.BathRoonNo,
            item.DirectionText,
            item.TypeText,
            item.Address,
            item.TotalChat,
            item.TotalView,
            item.VRTourUrl,
            chatPerson,
            item.Files,
            item.PriceUnit,
            item.TextStatus,
            item.BackgroudColor,
            item.IdText
        ));
    }

    function initCarousel() {
        //--- Slick
        $('#sectionImages .slider-single').slick({
            slidesToShow: 1,
            slidesToScroll: 1,
            arrows: false,
            fade: false,
            adaptiveHeight: true,
            infinite: false,
            useTransform: true,
            speed: 400,
            cssEase: 'cubic-bezier(0.77, 0, 0.18, 1)',
            asNavFor: '#sectionImages .slider-nav'
        });

        $('#sectionImages .slider-nav').on('init', function (event, slick) {
            $('#sectionImages .slider-nav .slick-slide.slick-current').addClass('is-active');
        }).slick({
            slidesToShow: 4,
            slidesToScroll: 1,
            dots: false,
            focusOnSelect: true,
            infinite: false,
            asNavFor: '#sectionImages .slider-single',
            draggable: false,
            arrows: true,
            responsive: [{
                breakpoint: 1024,
                settings: {
                    slidesToShow: 3,
                    slidesToScroll: 3,
                }
            }, {
                breakpoint: 640,
                settings: {
                    slidesToShow: 2,
                    slidesToScroll: 2,
                    arrows: false
                }
            }, {
                breakpoint: 420,
                settings: {
                    slidesToShow: 2,
                    slidesToScroll: 2,
                    arrows: false
                }
            }]
        });

        $('#sectionImages .slider-single').on('afterChange', function (event, slick, currentSlide) {
            $('.slider-nav').slick('slickGoTo', currentSlide);
            var currrentNavSlideElem = '#sectionImages .slider-nav .slick-slide[data-slick-index="' + currentSlide + '"]';
            $('#sectionImages .slider-nav .slick-slide.is-active').removeClass('is-active');
            $(currrentNavSlideElem).addClass('is-active');
        });

        $('#sectionImages .slider-nav').on('click', '.slick-slide', function (event) {
            event.preventDefault();
            var goToSingleSlide = $(this).data('slick-index');

            $('#sectionImages .slider-single').slick('slickGoTo', goToSingleSlide);
        });
    }
}


$(document).ready(function () {
    var el = document.getElementsByClassName('js-apartment-details')[0];
    var temlate = new ApartmentNewsDetails(el.getAttribute('apartment-id'), el.getAttribute('apartment-news'));

    ko.applyBindings(temlate, el);
});

